% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TestFunctions.R
\name{valueTest_SDDR}
\alias{valueTest_SDDR}
\title{Test Specific Parameter Value}
\usage{
valueTest_SDDR(prior, posterior, testVal, pKept = 0.96, bounds = TRUE)
}
\arguments{
\item{prior}{A vector of samples from the prior of the parameter.}

\item{posterior}{A vector of samples from the posterior of the parameter.}

\item{testVal}{The value that will be tested. The null hypothesis is that \code{P == testVal} and the alternative hypothesis is that \code{P =/= testVal}.}

\item{pKept}{The proportion of the prior and posterior distributions that will be kept. The rest will be discarded from the tails.}

\item{bounds}{If \code{TRUE}, bounds are based on \code{pKept}. If \code{FALSE}, no bounds are used. If a length 2 numeric vector, those are the bounds that are used.}
}
\value{
A list with several elements:
\itemize{
\item \code{success}: Whether density estimation was successful. If \code{FALSE}, all of the other values will be \code{NA} or \code{NULL}.
\item \code{bf10}: The Bayes factor in favor of the hypothesis that \code{P == testVal}.
\item \code{bf01}: The Bayes factor in favor of the hypothesis that \code{P =/= testVal}.
\item \code{prior_pKept}: The actual proportion of the prior that was kept. Should usually be equal to \code{pKept}.
\item \code{post_pKept}: The actual proportion of the posterior that was kept. Should usually be equal to \code{pKept}.
}
}
\description{
Performs a hypothesis test of whether a single parameter, \code{P}, has a given value, with the value chosen with \code{testVal}. Uses the Savage-Dickey density ratio.
}
\details{
This function assumes that the prior and posterior are both unbounded and potentially diffuse. To account for diffuse priors, it truncates both the prior and posterior in some way. By default, it keeps some proportion of the prior and posterior, which is set by the \code{pKept} argument. You use some combination of the \code{pKept} and \code{bounds} arguments to set the bounds.
}
